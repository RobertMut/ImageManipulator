<UserControl
    x:Class="ImageManipulator.Presentation.Views.ImageConvolutionView"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:colorpicker="clr-namespace:AvaloniaColorPicker;assembly=AvaloniaColorPicker"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:ext="using:ImageManipulator.Application.Common.Converters"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:ImageManipulator.Application.ViewModels"
    mc:Ignorable="d">
    <Grid>
        <Grid.Resources>
            <ext:IntStringConverter x:Key="IntStringConverter" />
            <ext:BitmapConverter x:Key="BitmapConverter"/>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.5*"/>
            <RowDefinition Height="0.5*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.7*"/>
            <ColumnDefinition Width="0.3*"/>
        </Grid.ColumnDefinitions>
        <Image Grid.Row="0" Grid.Column="0" Source="{Binding BeforeImage, Converter={StaticResource BitmapConverter}}" />
        <Image Grid.Row="1" Grid.Column="0" Source="{Binding AfterImage, Converter={StaticResource BitmapConverter}}" />
        <DockPanel Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" 
            VerticalAlignment="Center" HorizontalAlignment="Center">
            <StackPanel DockPanel.Dock="Top" VerticalAlignment="Center" Orientation="Vertical">
                <Label>Operation type:</Label>
                <RadioButton
                    x:Name="radioSoftenSharpen"
                    Content="Soften/Sharpen"
                    GroupName="type" />
                <RadioButton
                    x:Name="radioSobel"
                    Content="Sobel"
                    GroupName="type"
                    IsChecked="{Binding IsSobelSelected}" />
                <RadioButton x:Name="radioEdgeDetection"
                             Content="Edge detection"
                             GroupName="type"
                             IsChecked="{Binding IsEdgeDetectionSelected}"/>
            </StackPanel>
            <StackPanel DockPanel.Dock="Top" 
                        VerticalAlignment="Center" 
                        Orientation="Vertical" 
                        IsVisible="{Binding ElementName=radioEdgeDetection, Path=!IsChecked}">
                <Label
                    IsVisible="{Binding ElementName=radioSoftenSharpen, Path=IsChecked}">
                    Matrix size:
                </Label>
                <ComboBox Margin="0, 0, 0, 15"
                    x:Name="MatrixSize"
                    VerticalAlignment="Center"
                    IsVisible="{Binding ElementName=radioSoftenSharpen, Path=IsChecked}"
                    SelectedIndex="{Binding MatrixSize}">
                    <ComboBoxItem>3x3</ComboBoxItem>
                    <ComboBoxItem>5x5</ComboBoxItem>
                    <ComboBoxItem>7x7</ComboBoxItem>
                    <ComboBoxItem>9x9</ComboBoxItem>
                </ComboBox>
            </StackPanel>
            <StackPanel DockPanel.Dock="Top" 
                        VerticalAlignment="Center" 
                        Orientation="Vertical">
                <Label IsVisible="{Binding ElementName=radioSoftenSharpen, Path=IsChecked}" Margin="0, 15, 0, 0">
                    Matrix:
                </Label>
                <ComboBox
                    Margin="0, 0, 0, 15"
                    x:Name="softSharpBox"
                    VerticalAlignment="Center"
                    IsVisible="{Binding ElementName=radioSoftenSharpen, Path=IsChecked}"
                    SelectedIndex="{Binding SelectedSoftenSharpen}">
                    <ComboBoxItem>Average</ComboBoxItem>
                    <ComboBoxItem>Gauss</ComboBoxItem>
                    <ComboBoxItem>Average with weight</ComboBoxItem>
                    <ComboBoxItem>Laplace 1</ComboBoxItem>
                    <ComboBoxItem>Laplace 2</ComboBoxItem>
                    <ComboBoxItem>Laplace 3</ComboBoxItem>
                </ComboBox>
                <Label IsVisible="{Binding ElementName=radioSobel, Path=IsChecked}" Margin="0, 15, 0, 0">
                    Direction:
                </Label>
                <ComboBox
                    Margin="0, 0, 0, 15"
                    VerticalAlignment="Center"
                    IsVisible="{Binding ElementName=radioSobel, Path=IsChecked}"
                    SelectedIndex="{Binding SelectedSobel}">
                    <ComboBoxItem>North</ComboBoxItem>
                    <ComboBoxItem>East</ComboBoxItem>
                    <ComboBoxItem>NorthEast</ComboBoxItem>
                    <ComboBoxItem>SouthEast</ComboBoxItem>
                    <ComboBoxItem>South</ComboBoxItem>
                    <ComboBoxItem>NorthWest</ComboBoxItem>
                    <ComboBoxItem>West</ComboBoxItem>
                    <ComboBoxItem>SouthWest</ComboBoxItem>
                </ComboBox>
                <Label IsVisible="{Binding ElementName=radioEdgeDetection, Path=IsChecked}" Margin="0, 15, 0, 0">
                    Algorithm:
                </Label>
                <ComboBox
                    Margin="0, 0, 0, 15"
                    VerticalAlignment="Center"
                    IsVisible="{Binding ElementName=radioEdgeDetection, Path=IsChecked}"
					SelectedIndex="{Binding SelectedEdgeDetection}">
					<ComboBoxItem>Laplace</ComboBoxItem>
					<ComboBoxItem>Prewitt vertical</ComboBoxItem>
					<ComboBoxItem>Prewitt horizontal</ComboBoxItem>
                    <ComboBoxItem>Canny</ComboBoxItem>
                </ComboBox>
                
                <StackPanel Orientation="Vertical" Margin="0,15">
                    <Label IsVisible="{Binding IsWeightedSelected}">Weight:</Label>
                    <TextBox
                        IsVisible="{Binding IsWeightedSelected}"
                        Text="{Binding Value, Converter={StaticResource IntStringConverter}}"
                        Watermark="Value" />
                </StackPanel>
                
                <StackPanel Orientation="Vertical" Margin="0,15">
                    <Label>Image border:</Label>
                    <ComboBox x:Name="BorderCombo" SelectedIndex="{Binding ImageWrap, Mode=TwoWay}">
                        <ComboBoxItem>None</ComboBoxItem>
                        <ComboBoxItem>Constant</ComboBoxItem>
                        <ComboBoxItem>Reflect</ComboBoxItem>
                        <ComboBoxItem>Wrap</ComboBoxItem>
                        <ComboBoxItem>After</ComboBoxItem>
                    </ComboBox>
                </StackPanel>

                <Label>Border constant value:
                    <Interaction.Behaviors>
                        <DataTriggerBehavior Binding="{Binding SelectedIndex, ElementName=BorderCombo, Mode=OneWay}" Value="1" ComparisonCondition="NotEqual">
                            <ChangePropertyAction PropertyName="IsVisible" Value="False"/>
                        </DataTriggerBehavior>
                        <DataTriggerBehavior Binding="{Binding SelectedIndex, ElementName=BorderCombo, Mode=OneWay}" Value="1" ComparisonCondition="Equal">
                            <ChangePropertyAction PropertyName="IsVisible" Value="True"/>
                        </DataTriggerBehavior>
                    </Interaction.Behaviors>
                </Label>
                <TextBox Text="{Binding BorderConstVal, Converter={StaticResource IntStringConverter}}" Watermark="Border const">
                    <Interaction.Behaviors>
                        <DataTriggerBehavior Binding="{Binding SelectedIndex, ElementName=BorderCombo, Mode=OneWay}" Value="1" ComparisonCondition="NotEqual">
                            <ChangePropertyAction PropertyName="IsVisible" Value="False"/>
                        </DataTriggerBehavior>
                        <DataTriggerBehavior Binding="{Binding SelectedIndex, ElementName=BorderCombo, Mode=OneWay}" Value="1" ComparisonCondition="Equal">
                            <ChangePropertyAction PropertyName="IsVisible" Value="True"/>
                        </DataTriggerBehavior>
                    </Interaction.Behaviors>
                </TextBox>
            </StackPanel>
            <StackPanel 
                DockPanel.Dock="Bottom" 
                VerticalAlignment="Center" 
                Orientation="Horizontal" 
                HorizontalAlignment="Center">
                <Button x:Name="convolutionCommand" Command="{Binding Execute}">Execute</Button>
                <Button x:Name="AcceptCommand" 
                        Command="{Binding Accept, Mode=OneTime}" 
                        IsEnabled="{Binding Accept.CanExecute}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}">Accept changes</Button>
                <Button x:Name="CancelCommand"  
                        Command="{Binding Cancel, Mode=OneTime}"
                        IsEnabled="{Binding Cancel.CanExecute}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                >Cancel</Button>
            </StackPanel>
        </DockPanel>
    </Grid>
</UserControl>